I"O<h3 id="git-关于切换分支操作">git 关于切换分支操作</h3>

<ul>
  <li><code class="highlighter-rouge">git push origin :xn</code>或者<code class="highlighter-rouge">git push origin --delete xn</code>(将一个空分支推送到远程即为删除)</li>
  <li><code class="highlighter-rouge">git checkout -b xn</code>(新建本地为 xn 的分支并切换至 xn 分支)</li>
  <li><code class="highlighter-rouge">git push origin xn:xn</code>(将本地 xn 分支推送至远程 xn 分支)</li>
</ul>

<h3 id="git-上传项目">git 上传项目</h3>

<ul>
  <li><code class="highlighter-rouge">git add .</code> (把所有文件添加到暂存区里)</li>
  <li><code class="highlighter-rouge">git commit -am ‘备注’</code> (备注项目)</li>
  <li><code class="highlighter-rouge">git remote add origin 远程仓库地址名称</code> (添加远程仓库）</li>
  <li><code class="highlighter-rouge">git push</code> (上传到远程仓库）</li>
</ul>

<h3 id="git-相关指令">git 相关指令</h3>

<ul>
  <li><code class="highlighter-rouge">git remote set-url origin</code> 设置新的远程仓库地址 <span>或<span> <code class="highlighter-rouge">git remote rm origin</code> 移除远程仓库地址</span></span></li>
  <li><code class="highlighter-rouge">git status</code> (查看所有文件)</li>
  <li><code class="highlighter-rouge">rm -rf .git/</code> (移除 git,移除相关文件)</li>
  <li><code class="highlighter-rouge">ll</code> (查看列表)</li>
  <li><code class="highlighter-rouge">git branch —all /-r</code> (查看远程所有的分支)</li>
  <li><code class="highlighter-rouge">git branch</code> (查看本地分支)</li>
  <li><code class="highlighter-rouge">git branch -a</code> (查看所有分支)</li>
  <li><code class="highlighter-rouge">git branch 分支名</code> （新建分支)</li>
  <li><code class="highlighter-rouge">git checkout master</code> (切换基础分支)</li>
  <li><code class="highlighter-rouge">git fetch</code> (获取所有分支)</li>
  <li><code class="highlighter-rouge">git fetch origin 分支名</code>（下拉远程的分支文件）</li>
  <li><code class="highlighter-rouge">git pull</code> (下拉远程分支文件并合并)</li>
  <li><code class="highlighter-rouge">git diff</code> (比较所有的文件的修改)</li>
  <li><code class="highlighter-rouge">git clone [url]</code> （克隆远程项目）</li>
  <li><code class="highlighter-rouge">git checkout —set-upstream origin beta_lbs</code> (切换到远程的分支)
或者 <code class="highlighter-rouge">git push --set-upstream origin beta_lbs</code> （直接推送到远程)</li>
</ul>

<h3 id="master-分支的代码领先自己的分支git-如何把-master-分支代码合并到自己的分支">master 分支的代码领先自己的分支,git 如何把 master 分支代码合并到自己的分支</h3>

<p><strong>1.切换 master 分支</strong></p>

<ul>
  <li><code class="highlighter-rouge">git checkout master</code>
<strong>2.使用 git pull 把领先的主分支代码 pull 下来</strong></li>
  <li><code class="highlighter-rouge">git pull</code>
<strong>3.切换到自己的分支</strong></li>
  <li><code class="highlighter-rouge">git checkout xxx(自己的分支)</code>
<strong>4.把主分支的代码 merge 到自己的分支</strong></li>
  <li><code class="highlighter-rouge">git merge master</code>
<strong>5.git push 推上去 ok 完成,现在 你自己分支的代码就和主分支的代码一样了</strong></li>
  <li><code class="highlighter-rouge">git push</code></li>
</ul>

<h3 id="最简单的办法如下">最简单的办法如下：</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1.git fetch origin beta (下拉远程主分支)
2.git merge origin/beta (合并主分支)
</code></pre></div></div>

<h2 id="git-遇到的问题">git 遇到的问题</h2>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Git冲突：commit your changes or stash them before you can merge.
</code></pre></div></div>

<p><strong>解决办法</strong></p>

<ul>
  <li><code class="highlighter-rouge">git stash</code></li>
  <li><code class="highlighter-rouge">git pull</code></li>
  <li><code class="highlighter-rouge">git stash pop</code></li>
</ul>

<p><strong>冲突没有解决可回退</strong></p>

<ul>
  <li><code class="highlighter-rouge">git reset --merge</code></li>
</ul>
:ET